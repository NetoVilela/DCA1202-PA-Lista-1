int main(void){
  float vet[5] = {1.1,2.2,3.3,4.4,5.5};
  float *f;
  int i;
  f = vet;
  printf("contador/valor/valor/endereco/endereco");
  for(i = 0 ; i <= 4 ; i++){
    printf("\ni = %d",i);
    printf("vet[%d] = %.1f",i, vet[i]);
    printf("*(f + %d) = %.1f",i, *(f+i));
    printf("&vet[%d] = %X",i, &vet[i]);
    printf("(f + %d) = %X",i, f+i);
  }
}

Saída esperada:
5 linhas devido o loop for imprimindo: 
// 1 -> iterador "i"
// 2 -> conteúdo presente em vet[i] com uma casa decimal
// 3 -> conteúdo presente em cada iteração de vet com uma casa decimal utilizando a sintaxe de ponteiro
// 4 -> posição de memória de cada elemento usando o operador &
// 5 -> posição de memória de cada elemento apenas usando o ponteiro


// Saída:
// i = 0vet[0] = 1.1*(f + 0) = 1.1&vet[0] = 40D06010(f + 0) = 40D06010
// i = 1vet[1] = 2.2*(f + 1) = 2.2&vet[1] = 40D06014(f + 1) = 40D06014
// i = 2vet[2] = 3.3*(f + 2) = 3.3&vet[2] = 40D06018(f + 2) = 40D06018
// i = 3vet[3] = 4.4*(f + 3) = 4.4&vet[3] = 40D0601C(f + 3) = 40D0601C
// i = 4vet[4] = 5.5*(f + 4) = 5.5&vet[4] = 40D06020(f + 4) = 40D06020

